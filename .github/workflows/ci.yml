on: push

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Nix
        uses: cachix/install-nix-action@v24
        with:
          nix_path: nixpkgs=channel:nixpkgs-unstable

      - name: Set up Nix cache
        uses: cachix/cachix-action@v12
        with:
          name: tweag-topiary
          authToken: "${{ secrets.CACHIX_TWEAG_TOPIARY_AUTH_TOKEN }}"

      - name: Clippy, test, and benchmark
        run: export GC_DONT_GC=1; nix -L flake check

      - name: Build and test executable
        run: 'echo \{ \"foo\": \"bar\" \} | nix run . -- fmt -l json'

      - name: Verify that usage in README.md matches CLI output
        run: ./verify-documented-usage.sh

      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3
        if: success() && matrix.os == 'ubuntu-latest' && github.ref == 'refs/heads/main'
        with:
          path: 'website'

  deploy:
    needs: build
    if: github.ref == 'refs/heads/main'

    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
